<?xml version="1.0"?>
<testsuite name="Chrome 70.0.3538 (Linux 0.0.0)" package="" timestamp="2018-11-20T08:11:16" id="0" hostname="10decoders" tests="161" errors="0" failures="0" time="7.498">
  <properties>
    <property name="browser.fullName" value="Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36"/>
  </properties>
  <testcase name="ForgotPasswordComponent should create a component" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).ForgotPasswordComponent">
    <skipped/>
  </testcase>
  <testcase name="ForgotPasswordComponent should run #ngOnInit()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).ForgotPasswordComponent">
    <skipped/>
  </testcase>
  <testcase name="ForgotPasswordComponent should run #OpenDialog()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).ForgotPasswordComponent">
    <skipped/>
  </testcase>
  <testcase name="ForgotPasswordComponent should run #closeOption()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).ForgotPasswordComponent">
    <skipped/>
  </testcase>
  <testcase name="ForgotPasswordComponent should run #onSubmit()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).ForgotPasswordComponent">
    <skipped/>
  </testcase>
  <testcase name="ForgotPasswordService should run #updatepassword()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).ForgotPasswordService">
    <skipped/>
  </testcase>
  <testcase name="ForgotPasswordService should run #updateUser()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).ForgotPasswordService">
    <skipped/>
  </testcase>
  <testcase name="AppComponent should create a component" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).AppComponent">
    <skipped/>
  </testcase>
  <testcase name="AppComponent should run #ngOnInit()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).AppComponent">
    <skipped/>
  </testcase>
  <testcase name="DashboardComponent should create" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).DashboardComponent">
    <skipped/>
  </testcase>
  <testcase name="DashboardComponent should checking the initial value and method" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).DashboardComponent">
    <skipped/>
  </testcase>
  <testcase name="DashboardComponent calling getTopSelling method" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).DashboardComponent">
    <skipped/>
  </testcase>
  <testcase name="InventoryComponent should create a component" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).InventoryComponent">
    <skipped/>
  </testcase>
  <testcase name="InventoryComponent should run #ngOnInit()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).InventoryComponent">
    <skipped/>
  </testcase>
  <testcase name="InventoryComponent should run #loadDataPage()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).InventoryComponent">
    <skipped/>
  </testcase>
  <testcase name="InventoryitemsComponent should create" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).InventoryitemsComponent">
    <skipped/>
  </testcase>
  <testcase name="InvoiceComponent should create" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).InvoiceComponent">
    <skipped/>
  </testcase>
  <testcase name="LoginComponent should create" time="0.265" classname="Chrome_70_0_3538_(Linux_0_0_0).LoginComponent"/>
  <testcase name="LoginComponent To check the initial value" time="0.142" classname="Chrome_70_0_3538_(Linux_0_0_0).LoginComponent"/>
  <testcase name="LoginComponent entering value in username and password input controls" time="0.145" classname="Chrome_70_0_3538_(Linux_0_0_0).LoginComponent"/>
  <testcase name="LoginComponent after entering value the button should enabled and click Action should happen" time="0.112" classname="Chrome_70_0_3538_(Linux_0_0_0).LoginComponent"/>
  <testcase name="LoginComponent calling onSubmit method after clicked the login button" time="0.107" classname="Chrome_70_0_3538_(Linux_0_0_0).LoginComponent"/>
  <testcase name="LoginComponent #login should call endpoint and return it's result" time="1.252" classname="Chrome_70_0_3538_(Linux_0_0_0).LoginComponent"/>
  <testcase name="GroupMailComponent should create" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).GroupMailComponent">
    <skipped/>
  </testcase>
  <testcase name="OrderDetailComponent should create" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).OrderDetailComponent">
    <skipped/>
  </testcase>
  <testcase name="OrdersComponent should loading spinner" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).OrdersComponent">
    <skipped/>
  </testcase>
  <testcase name="OrdersComponent select dropdownvalue for the location" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).OrdersComponent">
    <skipped/>
  </testcase>
  <testcase name="OrdersComponent select dropdownvalue for the tickets" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).OrdersComponent">
    <skipped/>
  </testcase>
  <testcase name="OrdersComponent select dropdownvalue for the status" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).OrdersComponent">
    <skipped/>
  </testcase>
  <testcase name="OrdersComponent select dropdownvalue for the style" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).OrdersComponent">
    <skipped/>
  </testcase>
  <testcase name="OrdersComponent should search input " time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).OrdersComponent">
    <skipped/>
  </testcase>
  <testcase name="OrdersComponent order get all endpoint service call---------------------------- " time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).OrdersComponent">
    <skipped/>
  </testcase>
  <testcase name="OrdersComponent should expect the variables in the Oninit as false" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).OrdersComponent">
    <skipped/>
  </testcase>
  <testcase name="OrdersComponent should call the dismiss method" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).OrdersComponent">
    <skipped/>
  </testcase>
  <testcase name="OrdersComponent should call the close click mehtod" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).OrdersComponent">
    <skipped/>
  </testcase>
  <testcase name="OrdersComponent should call the load data method" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).OrdersComponent">
    <skipped/>
  </testcase>
  <testcase name="CreateComponent should create a component" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).CreateComponent">
    <skipped/>
  </testcase>
  <testcase name="CreateComponent should run #ngOnInit()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).CreateComponent">
    <skipped/>
  </testcase>
  <testcase name="CreateComponent should run #currentUserDetails()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).CreateComponent">
    <skipped/>
  </testcase>
  <testcase name="CreateComponent should run #omit_special_char()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).CreateComponent">
    <skipped/>
  </testcase>
  <testcase name="CreateComponent should run #createOrg()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).CreateComponent">
    <skipped/>
  </testcase>
  <testcase name="CreateComponent should run #getquerydetails()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).CreateComponent">
    <skipped/>
  </testcase>
  <testcase name="CreateComponent should run #updateOrg()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).CreateComponent">
    <skipped/>
  </testcase>
  <testcase name="CreateComponent should run #Previewimage()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).CreateComponent">
    <skipped/>
  </testcase>
  <testcase name="OrganizationComponent should create" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).OrganizationComponent">
    <skipped/>
  </testcase>
  <testcase name="PurchaseDetailComponent should create component" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).PurchaseDetailComponent">
    <skipped/>
  </testcase>
  <testcase name="PurchaseComponent should create component" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).PurchaseComponent">
    <skipped/>
  </testcase>
  <testcase name="PurchaseComponent checking the initial value and method" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).PurchaseComponent">
    <skipped/>
  </testcase>
  <testcase name="PurchaseComponent intializeCurrentUser method should called and checking the method" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).PurchaseComponent">
    <skipped/>
  </testcase>
  <testcase name="PurchaseComponent getallPurchaseOrder should called and checking the mockService and method" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).PurchaseComponent">
    <skipped/>
  </testcase>
  <testcase name="PackeditemsComponent should create" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).PackeditemsComponent">
    <skipped/>
  </testcase>
  <testcase name="ShipmentitemsComponent should create" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).ShipmentitemsComponent">
    <skipped/>
  </testcase>
  <testcase name="ShipmentsComponent should create" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).ShipmentsComponent">
    <skipped/>
  </testcase>
  <testcase name="SidenavComponent should create" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).SidenavComponent">
    <skipped/>
  </testcase>
  <testcase name="SidenavComponent should click the logout button" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).SidenavComponent">
    <skipped/>
  </testcase>
  <testcase name="SidenavComponent should call the logout button" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).SidenavComponent">
    <skipped/>
  </testcase>
  <testcase name="SyncServiceComponent should create a component" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).SyncServiceComponent">
    <skipped/>
  </testcase>
  <testcase name="SyncServiceComponent should run #ngOnInit()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).SyncServiceComponent">
    <skipped/>
  </testcase>
  <testcase name="SyncServiceComponent should run #ngAfterViewInit()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).SyncServiceComponent">
    <skipped/>
  </testcase>
  <testcase name="SyncServiceComponent should run #loadDataPage()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).SyncServiceComponent">
    <skipped/>
  </testcase>
  <testcase name="SyncServiceComponent should run #getSyncService()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).SyncServiceComponent">
    <skipped/>
  </testcase>
  <testcase name="SyncServiceComponent should run #timeFrequency()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).SyncServiceComponent">
    <skipped/>
  </testcase>
  <testcase name="SyncServiceComponent should run #getCountFrequency()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).SyncServiceComponent">
    <skipped/>
  </testcase>
  <testcase name="SyncServiceComponent should run #OpenDialog()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).SyncServiceComponent">
    <skipped/>
  </testcase>
  <testcase name="SyncServiceComponent should run #updateTime()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).SyncServiceComponent">
    <skipped/>
  </testcase>
  <testcase name="SyncServiceComponent should run #updateTimeFrequency()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).SyncServiceComponent">
    <skipped/>
  </testcase>
  <testcase name="SyncServiceComponent should run #updateCountFrequency()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).SyncServiceComponent">
    <skipped/>
  </testcase>
  <testcase name="SyncServiceComponent should run #increment()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).SyncServiceComponent">
    <skipped/>
  </testcase>
  <testcase name="SyncServiceComponent should run #decrement()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).SyncServiceComponent">
    <skipped/>
  </testcase>
  <testcase name="SyncServiceComponent should run #countValueChanged()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).SyncServiceComponent">
    <skipped/>
  </testcase>
  <testcase name="SyncServiceComponent should run #Onchange()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).SyncServiceComponent">
    <skipped/>
  </testcase>
  <testcase name="SyncService should run #updateFrequency()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).SyncService">
    <skipped/>
  </testcase>
  <testcase name="SyncService should run #getFrequency()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).SyncService">
    <skipped/>
  </testcase>
  <testcase name="SyncService should run #getCountFrequency()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).SyncService">
    <skipped/>
  </testcase>
  <testcase name="SyncService should run #updateCountFrequency()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).SyncService">
    <skipped/>
  </testcase>
  <testcase name="SyncService should run #getData()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).SyncService">
    <skipped/>
  </testcase>
  <testcase name="TicketcreationComponent should create" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketcreationComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should create a component" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #ngOnInit()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #ngAfterViewInit()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #loadDataPage()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #getSalesOrder()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #getAllSalesOrder()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #getAllSalesOrderByCode()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #currentUserDetails()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #Showdetails()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #Hidedetails()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #isSelected() and #toggle()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #toggle()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #AddOrder()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #getAllOrganizationUser()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #getAllOrganization()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #getQueryDetails()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #filterOrg()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #saveAssignedUserTicket()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #sendMessage()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #getTicketByUuid()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #getAllUploadFile()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #ViewTicketHistory()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #SelectedAttachment()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #download()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #DeleteAttachment()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #openCloseTicketModal()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #openDownloadAttachmentModal()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #getclosereason()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #fileupload()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #closeTicketOption()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #OpenDialog()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #sendMailMessage()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #tickettypechange()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #selectmodel()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #Addcomment()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #ViewHistory()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #cancelcomment()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #CloseTicketHistory()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #Reopenticket()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #closecomment()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #getAllCommentByTicketId()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketdetailsComponent should run #unCheckDownload()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketdetailsComponent">
    <skipped/>
  </testcase>
  <testcase name="TicketDataSource should run #connect()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketDataSource">
    <skipped/>
  </testcase>
  <testcase name="TicketDataSource should run #disconnect()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketDataSource">
    <skipped/>
  </testcase>
  <testcase name="TicketDataSource should run #loadDatas()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketDataSource">
    <skipped/>
  </testcase>
  <testcase name="TicketDataSource should run #loadDatasByCompanyCode()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketDataSource">
    <skipped/>
  </testcase>
  <testcase name="TicketDataSource should run #getSearchResultByOrgId()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketDataSource">
    <skipped/>
  </testcase>
  <testcase name="TicketDataSource should run #getSearchResult()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketDataSource">
    <skipped/>
  </testcase>
  <testcase name="TicketDataSource should run #OpenDialog()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketDataSource">
    <skipped/>
  </testcase>
  <testcase name="TicketDataSource should run #showTableData()" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketDataSource">
    <skipped/>
  </testcase>
  <testcase name="TicketComponent should create" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).TicketComponent">
    <skipped/>
  </testcase>
  <testcase name="NewRoleComponent should call #ngOnIt" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).NewRoleComponent">
    <skipped/>
  </testcase>
  <testcase name="NewRoleComponent select dropdownvalue for the role" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).NewRoleComponent">
    <skipped/>
  </testcase>
  <testcase name="NewRoleComponent select dropdownvalue for the organizations" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).NewRoleComponent">
    <skipped/>
  </testcase>
  <testcase name="NewRoleComponent select dropdownvalue for the organizations" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).NewRoleComponent">
    <skipped/>
  </testcase>
  <testcase name="NewRoleComponent add role button selected" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).NewRoleComponent">
    <skipped/>
  </testcase>
  <testcase name="NewRoleComponent currentUserDetails" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).NewRoleComponent">
    <skipped/>
  </testcase>
  <testcase name="NewRoleComponent getAllOrganization" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).NewRoleComponent">
    <skipped/>
  </testcase>
  <testcase name="NewRoleComponent organizationchanged" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).NewRoleComponent">
    <skipped/>
  </testcase>
  <testcase name="NewRoleComponent getUserRoleDetails" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).NewRoleComponent">
    <skipped/>
  </testcase>
  <testcase name="NewRoleComponent allowedScreenList" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).NewRoleComponent">
    <skipped/>
  </testcase>
  <testcase name="NewRoleComponent textChanged" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).NewRoleComponent">
    <skipped/>
  </testcase>
  <testcase name="NewRoleComponent updateUserRole" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).NewRoleComponent">
    <skipped/>
  </testcase>
  <testcase name="NewRoleComponent createUserRole" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).NewRoleComponent">
    <skipped/>
  </testcase>
  <testcase name="NewUserComponent entering value in createuser input controls" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).NewUserComponent">
    <skipped/>
  </testcase>
  <testcase name="NewUserComponent after entering value the button should enabled" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).NewUserComponent">
    <skipped/>
  </testcase>
  <testcase name="NewUserComponent after updating the value the button should enabled" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).NewUserComponent">
    <skipped/>
  </testcase>
  <testcase name="NewUserComponent select dropdownvalue for the role" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).NewUserComponent">
    <skipped/>
  </testcase>
  <testcase name="NewUserComponent select dropdownvalue for the organization" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).NewUserComponent">
    <skipped/>
  </testcase>
  <testcase name="UserRoleComponent should create" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).UserRoleComponent">
    <skipped/>
  </testcase>
  <testcase name="UserComponent should create" time="0" classname="Chrome_70_0_3538_(Linux_0_0_0).UserComponent">
    <skipped/>
  </testcase>
  <testcase name="UsersListComponent should create a component" time="0.515" classname="Chrome_70_0_3538_(Linux_0_0_0).UsersListComponent"/>
  <testcase name="UsersListComponent should run #ngOnInit()" time="0.45" classname="Chrome_70_0_3538_(Linux_0_0_0).UsersListComponent"/>
  <testcase name="UsersListComponent should run #getUserList()" time="0.43" classname="Chrome_70_0_3538_(Linux_0_0_0).UsersListComponent"/>
  <testcase name="UsersListComponent should run #ngAfterViewInit()" time="0.401" classname="Chrome_70_0_3538_(Linux_0_0_0).UsersListComponent"/>
  <testcase name="UsersListComponent should run #popupForNoData()" time="0.446" classname="Chrome_70_0_3538_(Linux_0_0_0).UsersListComponent"/>
  <testcase name="UsersListComponent should run #openDialog()" time="0.446" classname="Chrome_70_0_3538_(Linux_0_0_0).UsersListComponent"/>
  <testcase name="UsersListComponent should run #handleUserDisable()" time="0.37" classname="Chrome_70_0_3538_(Linux_0_0_0).UsersListComponent"/>
  <testcase name="UsersListComponent should run #OrgFilter()" time="0.356" classname="Chrome_70_0_3538_(Linux_0_0_0).UsersListComponent"/>
  <testcase name="UsersListComponent should run #RoleFilter()" time="0.344" classname="Chrome_70_0_3538_(Linux_0_0_0).UsersListComponent"/>
  <testcase name="UsersListComponent should run #applyFilter()" time="0.357" classname="Chrome_70_0_3538_(Linux_0_0_0).UsersListComponent"/>
  <testcase name="UsersListComponent should run #initializeValue()" time="0.434" classname="Chrome_70_0_3538_(Linux_0_0_0).UsersListComponent"/>
  <testcase name="UsersListComponent should run #sortPage()" time="0.465" classname="Chrome_70_0_3538_(Linux_0_0_0).UsersListComponent"/>
  <testcase name="UsersListComponent should run #handleUserEdit()" time="0.461" classname="Chrome_70_0_3538_(Linux_0_0_0).UsersListComponent"/>
  <system-out>
    <![CDATA[Chrome 70.0.3538 (Linux 0.0.0) LOG: 'response values are ---####------------ ', Object{user: Object{uuid: 'Hy-EMGqz7', id: 52, username: 'admin', password: 'admin', firstname: 'admin', ResetpasswordToken: null, lastname: 'admin', email: 'admin@gmail.com', loggedInDate: '2018-11-20T08:11:18.469Z', loggedOutDate: '2018-11-19T09:01:28.283Z', isDisabled: true, organizationUuid: null, Authorities: [...], organization: null}, token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1dWlkIjoiSHktRU1HcXo3IiwiaWQiOjUyLCJ1c2VybmFtZSI6ImFkbWluIiwicGFzc3dvcmQiOiJhZG1pbiIsImZpcnN0bmFtZSI6ImFkbWluIiwiUmVzZXRwYXNzd29yZFRva2VuIjpudWxsLCJsYXN0bmFtZSI6ImFkbWluIiwiZW1haWwiOiJhZG1pbkBnbWFpbC5jb20iLCJsb2dnZWRJbkRhdGUiOiIyMDE4LTExLTIwVDA4OjExOjE4LjQ2OVoiLCJsb2dnZWRPdXREYXRlIjoiMjAxOC0xMS0xOVQwOTowMToyOC4yODNaIiwiaXNEaXNhYmxlZCI6dHJ1ZSwib3JnYW5pemF0aW9uVXVpZCI6bnVsbCwiQXV0aG9yaXRpZXMiOlt7InV1aWQiOiJySjhtZk01R1EiLCJyb2xlIjoiQURNSU4iLCJhbGxvd2VkU2NyZWVucyI6IkRhc2hib2FyZCxQdXJjaGFzZSBPcmRlcnMsT3JkZXJzLFRpY2tldHMsSW52b2ljZXMsU2hpcG1lbnRzLEludmVudG9yeSxPcmdhbml6YXRpb24sVXNlcnMsU3luY1NlcnZpY2UsR3JvdXBNYWlsLFNldHRpbmdzIn1dLCJvcmdhbml6YXRpb24iOm51bGwsImlhdCI6MTU0MjcwMTQ3OH0.wFZftg8Of8U7wgAvv22YwfaYx2WoodjGh3y1cLLiqLM'}
,Chrome 70.0.3538 (Linux 0.0.0) LOG: HttpErrorResponse{headers: HttpHeaders{normalizedNames: Map{}, lazyUpdate: null, headers: Map{}}, status: 401, statusText: 'OK', url: 'https://stahlsdevportal.azurewebsites.net/api/User/getall', ok: false, name: 'HttpErrorResponse', message: 'Http failure response for https://stahlsdevportal.azurewebsites.net/api/User/getall: 401 OK', error: 'Unauthorized'}
,Chrome 70.0.3538 (Linux 0.0.0) LOG: HttpErrorResponse{headers: HttpHeaders{normalizedNames: Map{}, lazyUpdate: null, headers: Map{}}, status: 401, statusText: 'OK', url: 'https://stahlsdevportal.azurewebsites.net/api/User/getall', ok: false, name: 'HttpErrorResponse', message: 'Http failure response for https://stahlsdevportal.azurewebsites.net/api/User/getall: 401 OK', error: 'Unauthorized'}
,Chrome 70.0.3538 (Linux 0.0.0) LOG: HttpErrorResponse{headers: HttpHeaders{normalizedNames: Map{}, lazyUpdate: null, headers: Map{}}, status: 401, statusText: 'OK', url: 'https://stahlsdevportal.azurewebsites.net/api/User/getall', ok: false, name: 'HttpErrorResponse', message: 'Http failure response for https://stahlsdevportal.azurewebsites.net/api/User/getall: 401 OK', error: 'Unauthorized'}
,Chrome 70.0.3538 (Linux 0.0.0) LOG: HttpErrorResponse{headers: HttpHeaders{normalizedNames: Map{}, lazyUpdate: null, headers: Map{}}, status: 401, statusText: 'OK', url: 'https://stahlsdevportal.azurewebsites.net/api/User/getall', ok: false, name: 'HttpErrorResponse', message: 'Http failure response for https://stahlsdevportal.azurewebsites.net/api/User/getall: 401 OK', error: 'Unauthorized'}
,Chrome 70.0.3538 (Linux 0.0.0) LOG: HttpErrorResponse{headers: HttpHeaders{normalizedNames: Map{}, lazyUpdate: null, headers: Map{}}, status: 401, statusText: 'OK', url: 'https://stahlsdevportal.azurewebsites.net/api/User/getall', ok: false, name: 'HttpErrorResponse', message: 'Http failure response for https://stahlsdevportal.azurewebsites.net/api/User/getall: 401 OK', error: 'Unauthorized'}
,Chrome 70.0.3538 (Linux 0.0.0) LOG: HttpErrorResponse{headers: HttpHeaders{normalizedNames: Map{}, lazyUpdate: null, headers: Map{}}, status: 401, statusText: 'OK', url: 'https://stahlsdevportal.azurewebsites.net/api/User/getall', ok: false, name: 'HttpErrorResponse', message: 'Http failure response for https://stahlsdevportal.azurewebsites.net/api/User/getall: 401 OK', error: 'Unauthorized'}
,Chrome 70.0.3538 (Linux 0.0.0) LOG: HttpErrorResponse{headers: HttpHeaders{normalizedNames: Map{}, lazyUpdate: null, headers: Map{}}, status: 401, statusText: 'OK', url: 'https://stahlsdevportal.azurewebsites.net/api/User/getall', ok: false, name: 'HttpErrorResponse', message: 'Http failure response for https://stahlsdevportal.azurewebsites.net/api/User/getall: 401 OK', error: 'Unauthorized'}
,Chrome 70.0.3538 (Linux 0.0.0) LOG: HttpErrorResponse{headers: HttpHeaders{normalizedNames: Map{}, lazyUpdate: null, headers: Map{}}, status: 401, statusText: 'OK', url: 'https://stahlsdevportal.azurewebsites.net/api/User/getall', ok: false, name: 'HttpErrorResponse', message: 'Http failure response for https://stahlsdevportal.azurewebsites.net/api/User/getall: 401 OK', error: 'Unauthorized'}
,Chrome 70.0.3538 (Linux 0.0.0) LOG: HttpErrorResponse{headers: HttpHeaders{normalizedNames: Map{}, lazyUpdate: null, headers: Map{}}, status: 401, statusText: 'OK', url: 'https://stahlsdevportal.azurewebsites.net/api/User/getall', ok: false, name: 'HttpErrorResponse', message: 'Http failure response for https://stahlsdevportal.azurewebsites.net/api/User/getall: 401 OK', error: 'Unauthorized'}
,Chrome 70.0.3538 (Linux 0.0.0) LOG: HttpErrorResponse{headers: HttpHeaders{normalizedNames: Map{}, lazyUpdate: null, headers: Map{}}, status: 401, statusText: 'OK', url: 'https://stahlsdevportal.azurewebsites.net/api/User/getall', ok: false, name: 'HttpErrorResponse', message: 'Http failure response for https://stahlsdevportal.azurewebsites.net/api/User/getall: 401 OK', error: 'Unauthorized'}
,Chrome 70.0.3538 (Linux 0.0.0) LOG: HttpErrorResponse{headers: HttpHeaders{normalizedNames: Map{}, lazyUpdate: null, headers: Map{}}, status: 401, statusText: 'OK', url: 'https://stahlsdevportal.azurewebsites.net/api/User/disableuser/undefined', ok: false, name: 'HttpErrorResponse', message: 'Http failure response for https://stahlsdevportal.azurewebsites.net/api/User/disableuser/undefined: 401 OK', error: 'Unauthorized'}
,Chrome 70.0.3538 (Linux 0.0.0) LOG: HttpErrorResponse{headers: HttpHeaders{normalizedNames: Map{}, lazyUpdate: null, headers: Map{}}, status: 401, statusText: 'OK', url: 'https://stahlsdevportal.azurewebsites.net/api/User/getall', ok: false, name: 'HttpErrorResponse', message: 'Http failure response for https://stahlsdevportal.azurewebsites.net/api/User/getall: 401 OK', error: 'Unauthorized'}
,Chrome 70.0.3538 (Linux 0.0.0) LOG: HttpErrorResponse{headers: HttpHeaders{normalizedNames: Map{}, lazyUpdate: null, headers: Map{}}, status: 401, statusText: 'OK', url: 'https://stahlsdevportal.azurewebsites.net/api/User/getall', ok: false, name: 'HttpErrorResponse', message: 'Http failure response for https://stahlsdevportal.azurewebsites.net/api/User/getall: 401 OK', error: 'Unauthorized'}
,Chrome 70.0.3538 (Linux 0.0.0) LOG: HttpErrorResponse{headers: HttpHeaders{normalizedNames: Map{}, lazyUpdate: null, headers: Map{}}, status: 401, statusText: 'OK', url: 'https://stahlsdevportal.azurewebsites.net/api/User/getall', ok: false, name: 'HttpErrorResponse', message: 'Http failure response for https://stahlsdevportal.azurewebsites.net/api/User/getall: 401 OK', error: 'Unauthorized'}
,Chrome 70.0.3538 (Linux 0.0.0) LOG: HttpErrorResponse{headers: HttpHeaders{normalizedNames: Map{}, lazyUpdate: null, headers: Map{}}, status: 401, statusText: 'OK', url: 'https://stahlsdevportal.azurewebsites.net/api/User/getall', ok: false, name: 'HttpErrorResponse', message: 'Http failure response for https://stahlsdevportal.azurewebsites.net/api/User/getall: 401 OK', error: 'Unauthorized'}
,Chrome 70.0.3538 (Linux 0.0.0) LOG: HttpErrorResponse{headers: HttpHeaders{normalizedNames: Map{}, lazyUpdate: null, headers: Map{}}, status: 401, statusText: 'OK', url: 'https://stahlsdevportal.azurewebsites.net/api/User/getall', ok: false, name: 'HttpErrorResponse', message: 'Http failure response for https://stahlsdevportal.azurewebsites.net/api/User/getall: 401 OK', error: 'Unauthorized'}
,Chrome 70.0.3538 (Linux 0.0.0) ERROR: 'Unhandled Promise rejection:', 'Cannot match any routes. URL Segment: 'new-user'', '; Zone:', 'ProxyZone', '; Task:', 'Promise.then', '; Value:', Error: Cannot match any routes. URL Segment: 'new-user'
Error: Cannot match any routes. URL Segment: 'new-user'
    at ApplyRedirects.webpackJsonp../node_modules/@angular/router/esm5/router.js.ApplyRedirects.noMatchError (http://localhost:9877/_karma_webpack_/webpack:/node_modules/@angular/router/esm5/router.js:1765:1)
    at CatchSubscriber.selector (http://localhost:9877/_karma_webpack_/webpack:/node_modules/@angular/router/esm5/router.js:1730:1)
    at CatchSubscriber.webpackJsonp../node_modules/rxjs/_esm5/operators/catchError.js.CatchSubscriber.error (http://localhost:9877/_karma_webpack_/webpack:/node_modules/rxjs/_esm5/operators/catchError.js:105:1)
    at MapSubscriber.webpackJsonp../node_modules/rxjs/_esm5/Subscriber.js.Subscriber._error (http://localhost:9877/_karma_webpack_/webpack:/node_modules/rxjs/_esm5/Subscriber.js:134:1)
    at MapSubscriber.webpackJsonp../node_modules/rxjs/_esm5/Subscriber.js.Subscriber.error (http://localhost:9877/_karma_webpack_/webpack:/node_modules/rxjs/_esm5/Subscriber.js:108:1)
    at MapSubscriber.webpackJsonp../node_modules/rxjs/_esm5/Subscriber.js.Subscriber._error (http://localhost:9877/_karma_webpack_/webpack:/node_modules/rxjs/_esm5/Subscriber.js:134:1)
    at MapSubscriber.webpackJsonp../node_modules/rxjs/_esm5/Subscriber.js.Subscriber.error (http://localhost:9877/_karma_webpack_/webpack:/node_modules/rxjs/_esm5/Subscriber.js:108:1)
    at MapSubscriber.webpackJsonp../node_modules/rxjs/_esm5/Subscriber.js.Subscriber._error (http://localhost:9877/_karma_webpack_/webpack:/node_modules/rxjs/_esm5/Subscriber.js:134:1)
    at MapSubscriber.webpackJsonp../node_modules/rxjs/_esm5/Subscriber.js.Subscriber.error (http://localhost:9877/_karma_webpack_/webpack:/node_modules/rxjs/_esm5/Subscriber.js:108:1)
    at LastSubscriber.webpackJsonp../node_modules/rxjs/_esm5/Subscriber.js.Subscriber._error (http://localhost:9877/_karma_webpack_/webpack:/node_modules/rxjs/_esm5/Subscriber.js:134:1), 'Error: Cannot match any routes. URL Segment: 'new-user'
    at ApplyRedirects.webpackJsonp../node_modules/@angular/router/esm5/router.js.ApplyRedirects.noMatchError (http://localhost:9877/_karma_webpack_/webpack:/node_modules/@angular/router/esm5/router.js:1765:1)
    at CatchSubscriber.selector (http://localhost:9877/_karma_webpack_/webpack:/node_modules/@angular/router/esm5/router.js:1730:1)
    at CatchSubscriber.webpackJsonp../node_modules/rxjs/_esm5/operators/catchError.js.CatchSubscriber.error (http://localhost:9877/_karma_webpack_/webpack:/node_modules/rxjs/_esm5/operators/catchError.js:105:1)
    at MapSubscriber.webpackJsonp../node_modules/rxjs/_esm5/Subscriber.js.Subscriber._error (http://localhost:9877/_karma_webpack_/webpack:/node_modules/rxjs/_esm5/Subscriber.js:134:1)
    at MapSubscriber.webpackJsonp../node_modules/rxjs/_esm5/Subscriber.js.Subscriber.error (http://localhost:9877/_karma_webpack_/webpack:/node_modules/rxjs/_esm5/Subscriber.js:108:1)
    at MapSubscriber.webpackJsonp../node_modules/rxjs/_esm5/Subscriber.js.Subscriber._error (http://localhost:9877/_karma_webpack_/webpack:/node_modules/rxjs/_esm5/Subscriber.js:134:1)
    at MapSubscriber.webpackJsonp../node_modules/rxjs/_esm5/Subscriber.js.Subscriber.error (http://localhost:9877/_karma_webpack_/webpack:/node_modules/rxjs/_esm5/Subscriber.js:108:1)
    at MapSubscriber.webpackJsonp../node_modules/rxjs/_esm5/Subscriber.js.Subscriber._error (http://localhost:9877/_karma_webpack_/webpack:/node_modules/rxjs/_esm5/Subscriber.js:134:1)
    at MapSubscriber.webpackJsonp../node_modules/rxjs/_esm5/Subscriber.js.Subscriber.error (http://localhost:9877/_karma_webpack_/webpack:/node_modules/rxjs/_esm5/Subscriber.js:108:1)
    at LastSubscriber.webpackJsonp../node_modules/rxjs/_esm5/Subscriber.js.Subscriber._error (http://localhost:9877/_karma_webpack_/webpack:/node_modules/rxjs/_esm5/Subscriber.js:134:1)'

]]>
  </system-out>
  <system-err/>
</testsuite>